.template 0
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Authors:
# Caner Candan <caner@candan.fr>, http://caner.candan.fr
#

function global.cache__open(fn, path, pdir, cdir)
  my.cdir ?= global.cache_path
  my.pdir ?= global.build_path
  my.path ?= ""

  if my.path <> ""
    directory.create("$(my.pdir:)/$(my.path:)")
    directory.create("$(my.cdir:)/$(my.path:)")
    my.fn = my.path + '/' + my.fn
  endif

  # log('create and cache file "$(my.fn:)"', 'cache')
  output "$(my.cdir:)/$(my.fn:)"

  if defined(project->cache(path = my.fn))
    error('File conflict with the filename "$(my.fn:)".')
  endif
  new project.cache as c
    define c.path = my.fn
  endnew

  return my.fn
endfunction

function global.cache_open(fn, path, pdir, cdir)
  return cache__open(my.fn, my.path, my.pdir, my.cdir)
endfunction

function global.cache__close(fn, pdir, cdir)
  my.cdir ?= global.cache_path
  my.pdir ?= global.build_path

  close

  my.src = my.cdir + '/' + my.fn
  my.dst = my.pdir + '/' + my.fn

  if !samefiles(my.src, my.dst)
    debug('create file "$(my.fn:)"', 'cache')
    file.delete(my.dst)
    file.copy(my.src, my.dst)
  else
    # log('file "$(my.fn:)" not changed', 'cache')
  endif
endfunction

function global.cache_close(fn, pdir, cdir)
  return cache__close(my.fn, my.pdir, my.cdir)
endfunction

.endtemplate